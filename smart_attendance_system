import os
import cv2
import numpy as np
import numpy as npy
import face_recognition as face_rec
#import pyttsx3 as textSpeech
from datetime import datetime

#engine = textSpeech.init()

def resize(img, size) :
    width = int(img.shape[1]*size)
    height = int(img.shape[0] * size)
    dimension = (width, height)
    return cv2.resize(img, dimension,interpolation= cv2.INTER_AREA)

path = 'student_images'
studentImg = []
studentName = []
myList = os.listdir(path)
print(myList)

for cl in myList :
    curImg = cv2.imread(f'{path}/{cl}')
    studentImg.append(curImg)
    studentName.append(os.path.splitext(cl)[0])
print(studentName)

def findEncoding(images) :
    imgEncodings = []
    for img in images :
        img = resize(img, 0.25)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        encodeing = face_rec.face_encodings(img)[0]
        imgEncodings.append(encodeing)
    return imgEncodings

def MarkAttendence(name) :
    with open('attendence.csv','r+')as f:
        myDataList = f.readline()
        nameList = []
        for line in myDataList :
            entry = line.split(',')
            nameList.append(entry[0])
        if name not in nameList :
            now = datetime.now()
            timestr = now.strftime('%H : %M :%S')
            f.writelines(f'\n {name}, {timestr}')
            #engine.say('welcome to class' + name)
            #engine.runAndWait()
            #MarkAttendence(name)


EncodeList = findEncoding(studentImg)

vid = cv2.VideoCapture(0)
while True :
    success, frame = vid.read()
    Smaller_frames = cv2.resize(frame, (0,0), None, 0.25,0.25)

    facesInFrame = face_rec.face_locations(Smaller_frames)
    encodeFacesInFrame = face_rec.face_encodings(Smaller_frames, facesInFrame)

    for encodeFace, faceloc in zip(encodeFacesInFrame, facesInFrame) :
        matches = face_rec.compare_faces(EncodeList, encodeFace)
        facedis = face_rec.face_distance(EncodeList, encodeFace)
        print(facedis)
        matchIndex = np.argmin(facedis)

        if matches[matchIndex] :
            name = studentName[matchIndex].upper()
            y1, x2, y2, x1 = faceloc
            y1, x2, y2, x1 = y1*4, x2*4, y2*4, x1*4
            cv2.rectangle(frame, (x1,y1), (x2,y2), (0,255,0), 2)
            cv2.rectangle(frame, (x1, y2-25), (x2, y2), (0, 255, 0), cv2.FILLED)
            cv2.putText(frame, name, (x1+6, y2-6), cv2.FONT_HERSHEY_COMPLEX, 1, (255, 255, 255), 2)
            MarkAttendence(name)

        else:
            name = 'unknown'
            y1, x2, y2, x1 = faceloc
            y1, x2, y2, x1 = y1 * 4, x2 * 4, y2 * 4, x1 * 4
            cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)
            cv2.rectangle(frame, (x1, y2 - 25), (x2, y2), (0, 255, 0), cv2.FILLED)
            cv2.putText(frame, name, (x1 + 6, y2 - 6), cv2.FONT_HERSHEY_COMPLEX, 1, (255, 255, 255), 2)
            MarkAttendence('unknown')

        cv2.imshow('video', frame)
        cv2.waitKey(1)
